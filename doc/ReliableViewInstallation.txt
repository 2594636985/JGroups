
Reliable view installation
==========================

Author: Bela Ban
Version: $Id: ReliableViewInstallation.txt,v 1.1 2005/09/25 08:34:58 belaban Exp $

The default stack sees view as just messages; a view multicast is retransmitted until the sender is excluded because
it left or crashed. However, this behavior can lead to problems described below. The problems occur when a view
multicast is lost.


A: new coordinator doesn't take over
------------------------------------
- Group is {A,B,C}, A is coordinator
- A leaves gracefully, multicasts view V2 {B,C}
- C receives V2, B doesn't receive V2
- A terminates, which means that retransmission of A's V2 in B stops (B never receives V2)
- B's view is now V1 {A,B,C}
- C's view is now V2 {B,C}
- B does *not* become the new coordinator !

Problem 1:
- A new member D wants to join, B replies to the discovery request with coord=A, C replies with coord=B
- If D sends a JOIN request to B, B will reject the JOIN request because it thinks the coord is still A !
- If D sends a JOIN request to A, it will time out and receive no response
  --> In any case, D will continue looping forever, or until B is killed !

Problem 2:
- B invokes a group RPC. Because it still thinks A is part of the group, it will wait for A's reply, which
  never arrives. If the mode is GET_ALL and timeout is 0, then this call will block forever !


B: continuous SUSPECT messages
------------------------------
- Group is {A,B,C}, A is coordinator
- A leaves gracefully, multicasts view V2 {B,C}
- B receives V2, C doesn't receive V2
- A terminates, which means that retransmission of A's V2 in C stops (C never receives V2)
- C's view is now V1 {A,B,C}
- B's view is now V2 {B,C}
- When A terminates, C starts multicasting SUSPECT(A) messages to the group
- B (as coord) handles the SUSPECT(A) message, but since A is not a member of B's view V2 {B,C}, B simply
  *ignores* the SUSPECT(A) message !
- C continues multicasting SUSPECT(A) messages to the cluster

Problem:
- C invokes a group RPC. Because it still thinks A is part of the group, it will wait for A's reply, which
  never arrives. If the mode is GET_ALL and timeout is 0, then this call will block forever !


SOLUTION:

1: Views need to be ack'ed
--------------------------
- When multicasting a view, we block until every member in that view has acknowledged the view reception
- Because GMS runs above both UNICAST and NAKACK, we *don't* need to retransmit, but we cannot terminate (as in case A),
  before having received an ACK for the view from each member in the new view

2: Handling crashes of the coordinator while multicasting a view
----------------------------------------------------------------
- If the coordinator crashes before having received all ACKs, some members might still not receive the new view.
  (This is highly unlikely though)
- If we therefore receive a SUSPECT(P) where P is not member of the current view

















