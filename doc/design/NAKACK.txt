

Design of new NAKACK with only 1 retransmission table
=====================================================

Author:   Bela Ban
Date:     April 3, 2007
JIRA:     http://jira.jboss.com/jira/browse/JGRP-281
Version:  $Id: NAKACK.txt,v 1.4 2007/04/03 11:58:10 belaban Exp $



Motivation
----------
Merge of sent-table, received-table and delivered-table into one single retransmission table. This should reduce
complexity, and increase performance, because we don't need to handle 3 tables. Plus, sent-table maintained a sorted
key set (TreeMap) which made insertion costly when many keys were present.



Design
------

Variables:
- xmit-table: Map<Address,NakReceiverWindow> of senders and their associated NakReceiverWindows. Each NakReceiverWindow
              contains a map<Long,Message> of sequence numbers and the messages associated with them.
              Each NakReceiverWindow maintains the seqnos of (1) the highest message received, (2) the highest message
              delivered and (3) the lowest message. The latter is the seqno that was last purged through a stability
              message (see STABLE protocol)



On sending of M (sender=P):
- M is added to xmit-table
- The NakReceiverWindow for P adjusts its highest received message counter


On reception of M (sender=P):
- If P == local address: NOP
- Else: add M to xmit-table

- Remove as many messages from xmit-table as possible and pass up
- For each remove: NakReceiverWindow adjusts the highest delivered message counter for P's NakReceiverWindow



On GET_DIGEST:



On SET_DIGEST(D):


On reception of stability message D:
- For all highest seqnos in D:
  - Call stable() in the NakReceiverWindow. This will adjust the lowest message counter in the NakReceiverWindow


On creation of a new NakReceiverWindow with digest D:
- Create the NakReceiverWindow with
  - lowest seqno = D.low_seqno
  - highest delivered seqno = D.highest_delivered_seqno
  - highest received seqno = D.highest_received_seqno








