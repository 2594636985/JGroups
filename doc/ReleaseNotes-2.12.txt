

Release Notes JGroups 2.12
==========================


Author: Bela Ban

JGroups 2.12 is API-backwards compatible with previous versions (down to 2.2.7).

Below is a summary (with links to the detailed description) of the major new features, optimizations and bug fixes.




New features
============



LockService: a new distributed locking service
----------------------------------------------
[https://issues.jboss.org/browse/JGRP-1249]

New distributed lock service, offering a java.util.concurrent.lock.Lock implementation, providing cluster wide locks.

Blog: http://belaban.blogspot.com/2011/01/new-distributed-locking-service-in.html



BPING (Broadcast Ping): new discovery protocol based on broadcasting
--------------------------------------------------------------------
[https://issues.jboss.org/browse/JGRP-1269]

This is mainly used for discovery of JGroups on Android based phones. Apparently, IP multicasting is not correctly
implemented / supported on Android (2.1), and so we have to resort to UPD broadcasting.

Blog: http://belaban.blogspot.com/2011/01/jgroups-on-android-phones.html



RELAY: connecting 2 local (autonomous) clusters into a large virtual cluster
----------------------------------------------------------------------------
[https://issues.jboss.org/browse/JGRP-747]

A new protocol to connect 2 geographically separate site into 1 large virtual cluster. The local clusters are
completely autonomous, but RELAY makes them appear as if they were one.

This can for example be used to implement geographic failover

Blog: http://belaban.blogspot.com/2010/11/clustering-between-different-sites.html



JDBC_PING: new discovery protocol using a shared database
---------------------------------------------------------
[https://issues.jboss.org/browse/JGRP-1231]

All nodes use a shared DB (e.g. RDS on EC2) to place their location information into, and to read information from.
Thanks to Sanne for coming up with the idea and for implementing this !



FD_SOCK: ability to pick the bind address and port for the client socket
------------------------------------------------------------------------
[https://issues.jboss.org/browse/JGRP-1262]




Optimizations
=============


NAKACK: retransmitted messages don't need to be wrapped
-------------------------------------------------------
[https://issues.jboss.org/browse/JGRP-1266]

Not serializing retransmitted messages at the retransmitter and deserializing them at the requester saves
1 serialization and 1 deserialization per retransmitted message.


Faster NakReceiverWindow
------------------------
[https://issues.jboss.org/browse/JGRP-1133]

Various optimizations to reduce locking in NakReceiverWindow:
- Use of RetransmitTable (array-based matrix) rather than HashMap (reduced memory need, reduced locking, compaction)
- Removal of double locking






Bug fixes
=========


NAKACK: incorrect digest on merge and state transfer
----------------------------------------------------
[https://issues.jboss.org/browse/JGRP-1251]

When calling JChannel.getState() on a merge, the fetched state would overwrite the digest incorrectly.


AUTH: merge can bypass authorization
------------------------------------
[https://issues.jboss.org/browse/JGRP-1255]

AUTH would not check creds of other members in case of a merge. This allowed an unauthorized node to join
a cluster by triggering a merge.


Custom SocketFactory ignored
----------------------------
[https://issues.jboss.org/browse/JGRP-1276]

Despite setting a custom SocketFactory, it was ignored.


UFC: crash of depleted member could hang node
---------------------------------------------
[https://issues.jboss.org/browse/JGRP-1274]

Causing it to wait forever for credits from the crashed member.


UNICAST2: incorrect delivery order under stress
-----------------------------------------------
[https://issues.jboss.org/browse/JGRP-1267]

UNICAST2 could (in rare cases) deliver messages in incorrect order. Fixed by using the same (proven)
algorithm as NAKACK.


Incorrect conversion of TimeUnit if MILLISECONDS were not used
--------------------------------------------------------------
[https://issues.jboss.org/browse/JGRP-1277]



Manual
======

The manual is online at http://www.jgroups.org/manual/html/index.html



The complete list of features and bug fixes can be found at http://jira.jboss.com/jira/browse/JGRP.


Bela Ban, Kreuzlingen, Switzerland
Vladimir Blagojevic, Toronto, Canada
Richard Achmatowicz, Toronto, Canada
Sanne Grinovero, Newcastle, Great Britain

Feb 2011

